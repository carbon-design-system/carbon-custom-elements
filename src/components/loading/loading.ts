import settings from 'carbon-components/es/globals/js/settings';
import classnames from 'classnames';
import { html, property, customElement, LitElement } from 'lit-element';
import styles from 'carbon-components/scss/components/loading/_loading.scss';

const { prefix } = settings;

/**
 * Spinner types.
 */
export enum LOADING_TYPE {
  /**
   * Regular spinner.
   */
  REGULAR = 'regular',

  /**
   * Small spinner.
   */
  SMALL = 'small',

  /**
   * Overlay spinner.
   */
  OVERLAY = 'overlay',
}

/**
 * Spinner indicating loading state.
 */
@customElement(`${prefix}-loading` as any)
class BXLoading extends LitElement {
  /**
   * Spinner type. Corresponds to the attribute with the same name.
   */
  @property()
  type = LOADING_TYPE.REGULAR;

  /**
   * `true` if spinner should stop. Corresponds to the attribute with the same name.
   */
  @property({ type: Boolean })
  inactive = false;

  render() {
    const classes = classnames(`${prefix}--loading`, {
      [`${prefix}--loading--small`]: this.type === 'small',
      [`${prefix}--loading--stop`]: this.inactive,
    });
    const overlayClasses = classnames(`${prefix}--loading-overlay`, {
      [`${prefix}--loading-overlay--stop`]: this.inactive,
    });
    const backgroundTemplate =
      this.type !== 'small'
        ? null
        : html`
            <circle class=${`${prefix}--loading__background`} cx="0" cy="0" r="37.5" />
          `;
    const template = html`
      <div class="${classes}">
        <svg class="${prefix}--loading__svg" viewBox="-75 -75 150 150">
          <title>Loading</title>
          ${backgroundTemplate}
          <circle class=${`${prefix}--loading__stroke`} cx="0" cy="0" r="37.5" />
        </svg>
      </div>
    `;
    return this.type !== 'overlay'
      ? template
      : html`
          <div class="${overlayClasses}">${template}</div>
        `;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default BXLoading;
