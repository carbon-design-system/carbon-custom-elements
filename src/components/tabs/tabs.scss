//
// Copyright IBM Corp. 2019
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

@import 'carbon-components/scss/globals/scss/css--helpers';
@import 'carbon-components/scss/components/tabs/tabs';

:host(#{$prefix}-tabs) {
  @extend .#{$prefix}--tabs;
  @include focus-outline('reset');

  .#{$prefix}--tabs-trigger svg {
    width: auto;
    height: auto;
  }
}

:host(#{$prefix}-tabs:focus) {
  .#{$prefix}--tabs-trigger {
    @include focus-outline('outline');
  }
}

:host(#{$prefix}-tab) {
  @extend .#{$prefix}--tabs__nav-item;

  outline: none;

  .#{$prefix}--tabs__nav-link:active {
    @include focus-outline('reset');
  }
}

:host(#{$prefix}-tab:hover) {
  @include carbon--breakpoint(md) {
    background-color: transparent;
    box-shadow: none;
  }

  background-color: $hover-ui;
  box-shadow: 0 -1px 0 $hover-ui;
}

// `[role]` is only for specificity.
// We have `:not()` usage in the corresponding Carbon core style
// which puts specificity of "specific" scenario though the style is for "regular" scenario
:host(#{$prefix}-tab[disabled][role]),
:host(#{$prefix}-tab[disabled][role]:hover) {
  background-color: $ui-01;
  box-shadow: none;
  cursor: not-allowed;
  outline: none;

  @include carbon--breakpoint(md) {
    background-color: transparent;
  }

  .#{$prefix}--tabs__nav-link {
    color: $tab-text-disabled;
    pointer-events: none;

    @include carbon--breakpoint(md) {
      border-bottom: $tab-underline-disabled;
    }
  }
}

:host(#{$prefix}-tab[selected]) {
  background-color: $hover-ui;
  transition: color $duration--fast-01 motion(standard, productive);

  &:hover {
    background-color: $selected-ui;

    @include carbon--breakpoint(md) {
      background-color: transparent;
    }
  }

  .#{$prefix}--tabs__nav-link {
    &,
    // Need to override Carbon core's non-selected focus color
    &:focus,
    &:active {
      color: $text-01;
    }
  }

  @include carbon--breakpoint(md) {
    display: flex;
    background-color: transparent;

    .#{$prefix}--tabs__nav-link {
      @include type-style('heading-01');
      border-bottom: 3px solid $interactive-01;

      &:focus,
      &:active {
        border-bottom-width: 2px;
      }
    }
  }
}

:host(#{$prefix}-tab[highlighted]),
:host(#{$prefix}-tab[highlighted]:hover) {
  background-color: $hover-ui;
  box-shadow: 0 -1px 0 $hover-ui;

  // `highlighted` is not used in wide mode,
  // but we need guard for a scenario where a tab is highlighted and then the UI turned to wide mode
  @include carbon--breakpoint(md) {
    background-color: transparent;
    box-shadow: none;
  }
}

:host(#{$prefix}-tab[in-focus][selected]),
:host(#{$prefix}-tab[in-focus][selected]:hover) {
  @include carbon--breakpoint(md) {
    @include focus-outline('outline');

    // `[role]` is only for specificity.
    // We have `:not()` usage in the corresponding Carbon core style
    // which puts specificity of "specific" scenario though the style is for "regular" scenario
    a.#{$prefix}--tabs__nav-link[role] {
      border-bottom-width: 2px;
    }
  }
}

:host(#{$prefix}-tab[highlighted][selected]),
:host(#{$prefix}-tab[highlighted][selected]:hover) {
  background-color: $selected-ui;

  // `highlighted` is not used in wide mode,
  // but we need guard for a scenario where a tab is highlighted and then the UI turned to wide mode
  @include carbon--breakpoint(md) {
    background-color: transparent;
  }
}

// Disabled tab never gets selected, but we guard for manual addition of `selected` attribute
:host(#{$prefix}-tab[disabled][selected]),
:host(#{$prefix}-tab[disabled][selected]:hover),
:host(#{$prefix}-tab[disabled][in-focus][selected]),
:host(#{$prefix}-tab[disabled][in-focus][selected]:hover) {
  display: flex;
  background-color: $ui-01;
  box-shadow: none;

  @include carbon--breakpoint(md) {
    @include focus-outline('reset');

    background-color: transparent;
  }

  .#{$prefix}--tabs__nav-link {
    @include carbon--breakpoint(md) {
      @include type-style('body-short-01');

      color: $tab-text-disabled;
      border-bottom: $tab-underline-disabled;

      &:focus,
      &:active {
        border-bottom-width: 3px;
      }
    }
  }
}
