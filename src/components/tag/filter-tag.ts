/**
 * @license
 *
 * Copyright IBM Corp. 2019
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { html, property, query, customElement, LitElement } from 'lit-element';
import settings from 'carbon-components/es/globals/js/settings';
import Close16 from '@carbon/icons/lib/close/16';
import FocusMixin from '../../globals/mixins/focus';
import HostListener from '../../globals/decorators/host-listener';
import HostListenerMixin from '../../globals/mixins/host-listener';
import TAG_TYPE from './types';
import styles from './tag.scss';

export { TAG_TYPE };

const { prefix } = settings;

/**
 * Filter tag.
 */
@customElement(`${prefix}-filter-tag`)
export default class BXFilterTag extends HostListenerMixin(FocusMixin(LitElement)) {
  @query('button')
  protected _buttonNode!: HTMLButtonElement;

  /**
   * Handles `click` event on this element.
   * @param event The event.
   */
  @HostListener('shadowRoot:click')
  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to
  private _handleClick = (event: MouseEvent) => {
    if (event.composedPath().indexOf(this._buttonNode!) >= 0) {
      event.stopPropagation();
    }
  };

  /**
   * Text to show on filter tag "clear" buttons. Corresponds to the attribute with the same name
   */
  @property({ type: String, reflect: true })
  title = 'Clear filter';

  /**
   * `true` if the tag should be disabled
   */
  @property({ type: Boolean, reflect: true })
  disabled = false;

  /**
   * Specify the type of the <Tag>
   */
  @property({ reflect: true })
  type = TAG_TYPE.RED;

  render() {
    return html`
      <slot></slot>
      <button>
        ${Close16({ 'aria-label': this.title })}
      </button>
    `;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}
